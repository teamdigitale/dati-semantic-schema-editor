name: Release

on:
  push:
    branches:
      - main

env:
  CI: true
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/italia/schema-editor

jobs:
  # This job is used to version and publish the packages
  release:
    name: Release Changeset
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies and build packages
        uses: ./.github/actions/ci-setup

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version # Workaround for https://github.com/changesets/changesets/issues/421
          publish: pnpm ci:publish
          commit: "chore: update versions"
          title: "chore: update versions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # This job is used to publish the docker images
  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: [release]
    if: needs.release.outputs.published == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Docker tags
        id: determine-tags
        run: |
          ALL_TAGS=""

          # Determine the version of the webapp package
          VERSION=$(jq -r .version apps/webapp/package.json)
          if [ -n "$VERSION" ] && [ "$VERSION" != "null" ]; then
            ALL_TAGS="webapp:${VERSION}"
          fi

          # Pass the tags to the next step
          echo "Generated Tags for push: $ALL_TAGS"
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo -e "$ALL_TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.determine-tags.outputs.tags != ''
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          target: webapp
          tags: ${{ steps.determine-tags.outputs.tags }}
